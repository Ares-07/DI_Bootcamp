#1
import pandas as pd
import numpy as np
#2
raw_data_1 = {
'subject_id': ['1', '2', '3', '4', '5'],
'first_name': ['Alex', 'Amy', 'Allen', 'Alice', 'Ayoung'], 'last_name': ['Anderson', 'Ackerman', 'Ali', 'Aoni', 'Atiches']}
raw_data_2 = {
'subject_id': ['4', '5', '6', '7', '8'],
'first_name': ['Billy', 'Brian', 'Bran', 'Bryce', 'Betty'], 'last_name': ['Bonder', 'Black', 'Balwner', 'Brice', 'Btisan']}
raw_data_3 = {
'subject_id': ['1', '2', '3', '4', '5', '7', '8', '9', '10', '11'], 'test_id': [51, 15, 15, 61, 16, 14, 15, 1, 61, 16]}
#3
data_f1 = pd.DataFrame(raw_data_1)
data_f2 = pd.DataFrame(raw_data_2)
data_f3 = pd.DataFrame(raw_data_3)
#4 Join the two dataframes along rows and assign all_data
all_data = pd.concat([data_f1, data_f2])
print(all_data)
#5 Join the two dataframes along columns and assing to all_data_col
all_data_col = pd.concat([data_f2, data_f3], axis=1)
print(all_data_col)
#6
print(data_f3)
#7 Merge all_data and data3 along the subject_id value
print(pd.merge(data_f3, all_data, on='subject_id'))
#8 Merge only the data that has the same 'subject_id' on both data1 and data2
print(pd.merge(data_f1, data_f2, left_on='subject_id', right_on='subject_id'))
#9 Merge all values in data1 and data2,
#             with matching records from both sides where available.
print(pd.merge(data_f1, data_f2, on='subject_id', how='outer'))
